// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// Users Table
model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  password     String
  categories   Category[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// Categories Table
model Category {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  name         String        @default("Uncategorized")
  type         CategoryType
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// Transactions Table
model Transaction {
  id          Int             @id @default(autoincrement())
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  category    Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  type        TransactionType
  amount      Decimal
  date        DateTime        @default(now())
  description String? // Optional field
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

// Enums for Type Fields
enum CategoryType {
  income
  expense
}

enum TransactionType {
  income
  expense
}
